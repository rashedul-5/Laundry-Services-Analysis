# -*- coding: utf-8 -*-
"""Laundry Services .csv_Analysis_Notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VTUD4-IvbvB2v581gdSPHmOOHbX4mU5o
"""

#step 1:Import libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')

"""## step 2:load the data

"""

df=pd.read_csv('dataset_13_Laundry Services.csv')
#list to store output results
output=[]
output.append("Exploratory Data Analysis of Laundry Services .csv\n")
output.append("================================\n")

"""## step 3 : load the data"""

print(df.head())
output.append(f"fisrt few rows:\n{df.head()}\n")

df.info()

print(df.describe())
output.append(f"summary statistics:\n{df.describe()}\n")

"""## step 4 :clean the data"""

output.append("data cleaning results:\n")
missing_values=df.isnull().sum()
print(missing_values)
output.append(f"missing values:\n{missing_values}\n")

df.dropna(inplace=True)

df['Date']=pd.to_datetime(df['Date'])

duplicates=df.duplicated().sum()
output.append(f"number of duplicates dropped:{duplicates}\n")
df.drop_duplicates(inplace=True)

"""## step 5 : analyze the data"""

total_revenue=df['Price'].sum()
output.append(f'total Revenue:${total_revenue}\n')
print(f'total revenue:${total_revenue}')

average_price_per_service=df.groupby('Customer_Type')['Price'].mean()
output.append("Average price per customer type:\n")
output.append(f"{average_price_per_service}\n")
print(average_price_per_service)

total_services_by_region=df['Region'].value_counts()
output.append("Total services provided by region:\n")
output.append(f"{total_services_by_region}\n")
print(total_services_by_region)

revenue_by_region=df.groupby('Region')['Price'].sum()
output.append("Total Revenue by Region:\n")
output.append(f"{revenue_by_region}\n")
print(revenue_by_region)

"""## step 6 :visualize the data"""

plt.figure(figsize=(10,6))
plt.bar(total_services_by_region.index,total_services_by_region.values)
plt.title('Total Services Provided by Region')
plt.xlabel('Region')
plt.ylabel('Number of Services')
plt.xticks(rotation=45)
plt.savefig('total_services_by_region.png')
plt.show()

plt.figure(figsize=(8,8))
plt.pie(total_services_by_region,labels=total_services_by_region.index,autopct='%1.1f%%')
plt.title('Distribution of Services by Region')
plt.axis('equal')
plt.savefig('service_distribution_by_region.png')
plt.show()

plt.figure(figsize=(10,6))
plt.bar(average_price_per_service.index,average_price_per_service.values)
plt.title('Avereage Price per Service Type')
plt.xlabel('Service Type')
plt.ylabel('Average Price')
plt.xticks(rotation=45)
plt.savefig('average_price_per_service.png')
plt.show()

plt.figure(figsize=(6,6))
plt.pie(average_price_per_service,labels=average_price_per_service.index,autopct='%1.1f%%')
plt.title('Distribution Average price per service')
plt.axis('equal')
plt.savefig('average_price_per_pie.png')
plt.show()

plt.figure(figsize=(6,6))
plt.pie(revenue_by_region,labels=revenue_by_region.index,autopct='%1.1f%%')
plt.title('Revenue Distribution of Revenue by Region')
plt.axis('equal')
plt.savefig('revenue_by_region.png')
plt.show()

"""##  save output to text"""

with open('analysis_output','w')as f:
  f.writelines(output)
